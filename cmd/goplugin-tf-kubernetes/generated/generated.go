// Code generated by Lyra DO NOT EDIT.

// This code is generated on a per-provider basis using "tf-gen"
// Long term our hope is to remove this generation step and adopt dynamic approach

package generated

import (
	"sync"

	"github.com/hashicorp/terraform/helper/schema"
	"github.com/hashicorp/terraform/terraform"
	"github.com/lyraproj/lyra/pkg/bridge"
	"github.com/lyraproj/puppet-evaluator/eval"
	"github.com/lyraproj/servicesdk/service"
)

var once sync.Once
var Config *terraform.ResourceConfig

func configureProvider(p *schema.Provider) {
	once.Do(func() {
		if Config == nil {
			Config = &terraform.ResourceConfig{
				Config: map[string]interface{}{},
			}
		}
		err := p.Configure(Config)
		if err != nil {
			panic(err)
		}
	})
}

func Initialize(sb *service.ServerBuilder, p *schema.Provider) {
    var evs []eval.Type
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_cluster_role_binding{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_cluster_role_bindingHandler", &Kubernetes_cluster_role_bindingHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_config_map{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_config_mapHandler", &Kubernetes_config_mapHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_deployment{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_deploymentHandler", &Kubernetes_deploymentHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_horizontal_pod_autoscaler{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_horizontal_pod_autoscalerHandler", &Kubernetes_horizontal_pod_autoscalerHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_limit_range{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_limit_rangeHandler", &Kubernetes_limit_rangeHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_namespace{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_namespaceHandler", &Kubernetes_namespaceHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_network_policy{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_network_policyHandler", &Kubernetes_network_policyHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_persistent_volume{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_persistent_volumeHandler", &Kubernetes_persistent_volumeHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_persistent_volume_claim{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_persistent_volume_claimHandler", &Kubernetes_persistent_volume_claimHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_pod{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_podHandler", &Kubernetes_podHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_replication_controller{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_replication_controllerHandler", &Kubernetes_replication_controllerHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_resource_quota{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_resource_quotaHandler", &Kubernetes_resource_quotaHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_role{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_roleHandler", &Kubernetes_roleHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_role_binding{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_role_bindingHandler", &Kubernetes_role_bindingHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_secret{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_secretHandler", &Kubernetes_secretHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_service{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_serviceHandler", &Kubernetes_serviceHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_service_account{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_service_accountHandler", &Kubernetes_service_accountHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_stateful_set{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_stateful_setHandler", &Kubernetes_stateful_setHandler{provider: p}, evs[0])
    evs = sb.RegisterTypes("TerraformKubernetes", Kubernetes_storage_class{})
    sb.RegisterHandler("TerraformKubernetes::Kubernetes_storage_classHandler", &Kubernetes_storage_classHandler{provider: p}, evs[0])
}


type Kubernetes_cluster_role_binding_metadata_1079 struct {

    Annotations *map[string]string

    Generation *int

    Labels *map[string]string

    Name *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_cluster_role_binding_subject_1080 struct {

    Api_group *string

    Kind string

    Name string

    Namespace *string

}

type Kubernetes_cluster_role_binding struct {

    Kubernetes_cluster_role_binding_id *string `lyra:"ignore"`

    Metadata []Kubernetes_cluster_role_binding_metadata_1079

    Role_ref map[string]string

    Subject []Kubernetes_cluster_role_binding_subject_1080

}

// Kubernetes_cluster_role_bindingHandler ...
type Kubernetes_cluster_role_bindingHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_cluster_role_bindingHandler) Create(desired *Kubernetes_cluster_role_binding) (*Kubernetes_cluster_role_binding, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_cluster_role_binding", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_cluster_role_bindingHandler) Read(externalID string) (*Kubernetes_cluster_role_binding, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_cluster_role_binding", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_cluster_role_binding{ Kubernetes_cluster_role_binding_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_cluster_role_bindingHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_cluster_role_binding", externalID)
}

type Kubernetes_config_map_metadata_1081 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_config_map struct {

    Kubernetes_config_map_id *string `lyra:"ignore"`

    Data *map[string]string

    Metadata []Kubernetes_config_map_metadata_1081

}

// Kubernetes_config_mapHandler ...
type Kubernetes_config_mapHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_config_mapHandler) Create(desired *Kubernetes_config_map) (*Kubernetes_config_map, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_config_map", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_config_mapHandler) Read(externalID string) (*Kubernetes_config_map, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_config_map", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_config_map{ Kubernetes_config_map_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_config_mapHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_config_map", externalID)
}

type Kubernetes_deployment_metadata_1082 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_deployment_spec_1083_selector_1084_match_expressions_1085 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_deployment_spec_1083_selector_1084 struct {

    Match_expressions *[]Kubernetes_deployment_spec_1083_selector_1084_match_expressions_1085

    Match_labels *map[string]string

}

type Kubernetes_deployment_spec_1083_strategy_1086_rolling_update_1087 struct {

    Max_surge *string

    Max_unavailable *string

}

type Kubernetes_deployment_spec_1083_strategy_1086 struct {

    Rolling_update *[]Kubernetes_deployment_spec_1083_strategy_1086_rolling_update_1087

    Type *string

}

type Kubernetes_deployment_spec_1083_template_1088_metadata_1089 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_config_map_key_ref_1094 struct {

    Key *string

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_field_ref_1095 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_resource_field_ref_1096 struct {

    Container_name *string

    Resource string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_secret_key_ref_1097 struct {

    Key *string

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093 struct {

    Config_map_key_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_config_map_key_ref_1094

    Field_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_field_ref_1095

    Resource_field_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_resource_field_ref_1096

    Secret_key_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093_secret_key_ref_1097

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092_value_from_1093

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098_config_map_ref_1099 struct {

    Name string

    Optional *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098_secret_ref_1100 struct {

    Name string

    Optional *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098 struct {

    Config_map_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098_config_map_ref_1099

    Prefix *string

    Secret_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098_secret_ref_1100

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_exec_1103 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_http_get_1104_http_header_1105 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_http_get_1104 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_http_get_1104_http_header_1105

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_tcp_socket_1106 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_exec_1103

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_http_get_1104

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102_tcp_socket_1106

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_exec_1108 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_http_get_1109_http_header_1110 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_http_get_1109 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_http_get_1109_http_header_1110

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_tcp_socket_1111 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_exec_1108

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_http_get_1109

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107_tcp_socket_1111

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101 struct {

    Post_start *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_post_start_1102

    Pre_stop *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101_pre_stop_1107

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_exec_1113 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_http_get_1114_http_header_1115 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_http_get_1114 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_http_get_1114_http_header_1115

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_tcp_socket_1116 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_exec_1113

    Failure_threshold *int

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_http_get_1114

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112_tcp_socket_1116

    Timeout_seconds *int

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_port_1117 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_exec_1119 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_http_get_1120_http_header_1121 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_http_get_1120 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_http_get_1120_http_header_1121

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_tcp_socket_1122 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_exec_1119

    Failure_threshold *int

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_http_get_1120

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118_tcp_socket_1122

    Timeout_seconds *int

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123_limits_1124 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123_requests_1125 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123 struct {

    Limits *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123_limits_1124

    Requests *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123_requests_1125

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126_capabilities_1127 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126_se_linux_options_1128 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126_capabilities_1127

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126_se_linux_options_1128

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_volume_mount_1129 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_1092

    Env_from *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_env_from_1098

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_lifecycle_1101

    Liveness_probe *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_liveness_probe_1112

    Name string

    Port *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_port_1117

    Readiness_probe *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_readiness_probe_1118

    Resources *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_resources_1123

    Security_context *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_security_context_1126

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091_volume_mount_1129

    Working_dir *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_image_pull_secrets_1130 struct {

    Name string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_config_map_key_ref_1134 struct {

    Key *string

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_field_ref_1135 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_resource_field_ref_1136 struct {

    Container_name *string

    Resource string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_secret_key_ref_1137 struct {

    Key *string

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133 struct {

    Config_map_key_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_config_map_key_ref_1134

    Field_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_field_ref_1135

    Resource_field_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_resource_field_ref_1136

    Secret_key_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133_secret_key_ref_1137

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132_value_from_1133

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138_config_map_ref_1139 struct {

    Name string

    Optional *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138_secret_ref_1140 struct {

    Name string

    Optional *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138 struct {

    Config_map_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138_config_map_ref_1139

    Prefix *string

    Secret_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138_secret_ref_1140

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_exec_1143 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_http_get_1144_http_header_1145 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_http_get_1144 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_http_get_1144_http_header_1145

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_tcp_socket_1146 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_exec_1143

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_http_get_1144

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142_tcp_socket_1146

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_exec_1148 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_http_get_1149_http_header_1150 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_http_get_1149 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_http_get_1149_http_header_1150

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_tcp_socket_1151 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_exec_1148

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_http_get_1149

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147_tcp_socket_1151

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141 struct {

    Post_start *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_post_start_1142

    Pre_stop *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141_pre_stop_1147

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_exec_1153 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_http_get_1154_http_header_1155 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_http_get_1154 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_http_get_1154_http_header_1155

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_tcp_socket_1156 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_exec_1153

    Failure_threshold *int

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_http_get_1154

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152_tcp_socket_1156

    Timeout_seconds *int

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_port_1157 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_exec_1159 struct {

    Command *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_http_get_1160_http_header_1161 struct {

    Name *string

    Value *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_http_get_1160 struct {

    Host *string

    Http_header *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_http_get_1160_http_header_1161

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_tcp_socket_1162 struct {

    Port string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158 struct {

    Exec *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_exec_1159

    Failure_threshold *int

    Http_get *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_http_get_1160

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158_tcp_socket_1162

    Timeout_seconds *int

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163_limits_1164 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163_requests_1165 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163 struct {

    Limits *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163_limits_1164

    Requests *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163_requests_1165

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166_capabilities_1167 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166_se_linux_options_1168 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166_capabilities_1167

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166_se_linux_options_1168

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_volume_mount_1169 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_1132

    Env_from *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_env_from_1138

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_lifecycle_1141

    Liveness_probe *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_liveness_probe_1152

    Name string

    Port *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_port_1157

    Readiness_probe *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_readiness_probe_1158

    Resources *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_resources_1163

    Security_context *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_security_context_1166

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131_volume_mount_1169

    Working_dir *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_security_context_1170_se_linux_options_1171 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_security_context_1170 struct {

    Fs_group *int

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_security_context_1170_se_linux_options_1171

    Supplemental_groups *[]int

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_aws_elastic_block_store_1173 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_azure_disk_1174 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_azure_file_1175 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_ceph_fs_1176_secret_ref_1177 struct {

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_ceph_fs_1176 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_ceph_fs_1176_secret_ref_1177

    User *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_cinder_1178 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_config_map_1179_items_1180 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_config_map_1179 struct {

    Default_mode *int

    Items *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_config_map_1179_items_1180

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182_field_ref_1183 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182_resource_field_ref_1184 struct {

    Container_name string

    Quantity *string

    Resource string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182 struct {

    Field_ref []Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182_field_ref_1183

    Mode *int

    Path string

    Resource_field_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182_resource_field_ref_1184

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181 struct {

    Default_mode *int

    Items *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181_items_1182

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_empty_dir_1185 struct {

    Medium *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_fc_1186 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flex_volume_1187_secret_ref_1188 struct {

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flex_volume_1187 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flex_volume_1187_secret_ref_1188

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flocker_1189 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_gce_persistent_disk_1190 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_git_repo_1191 struct {

    Directory *string

    Repository *string

    Revision *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_glusterfs_1192 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_host_path_1193 struct {

    Path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_iscsi_1194 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_local_1195 struct {

    Path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_nfs_1196 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_persistent_volume_claim_1197 struct {

    Claim_name *string

    Read_only *bool

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_photon_persistent_disk_1198 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_quobyte_1199 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_rbd_1200_secret_ref_1201 struct {

    Name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_rbd_1200 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_rbd_1200_secret_ref_1201

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_secret_1202_items_1203 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_secret_1202 struct {

    Default_mode *int

    Items *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_secret_1202_items_1203

    Optional *bool

    Secret_name *string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_vsphere_volume_1204 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172 struct {

    Aws_elastic_block_store *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_aws_elastic_block_store_1173

    Azure_disk *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_azure_disk_1174

    Azure_file *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_azure_file_1175

    Ceph_fs *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_ceph_fs_1176

    Cinder *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_cinder_1178

    Config_map *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_config_map_1179

    Downward_api *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_downward_api_1181

    Empty_dir *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_empty_dir_1185

    Fc *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_fc_1186

    Flex_volume *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flex_volume_1187

    Flocker *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_flocker_1189

    Gce_persistent_disk *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_gce_persistent_disk_1190

    Git_repo *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_git_repo_1191

    Glusterfs *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_glusterfs_1192

    Host_path *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_host_path_1193

    Iscsi *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_iscsi_1194

    Local *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_local_1195

    Name *string

    Nfs *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_nfs_1196

    Persistent_volume_claim *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_persistent_volume_claim_1197

    Photon_persistent_disk *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_photon_persistent_disk_1198

    Quobyte *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_quobyte_1199

    Rbd *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_rbd_1200

    Secret *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_secret_1202

    Vsphere_volume *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172_vsphere_volume_1204

}

type Kubernetes_deployment_spec_1083_template_1088_spec_1090 struct {

    Active_deadline_seconds *int

    Container *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_container_1091

    Dns_policy *string

    Host_ipc *bool

    Host_network *bool

    Host_pid *bool

    Hostname *string

    Image_pull_secrets *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_image_pull_secrets_1130

    Init_container *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_init_container_1131

    Node_name *string

    Node_selector *map[string]string

    Restart_policy *string

    Security_context *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_security_context_1170

    Service_account_name *string

    Subdomain *string

    Termination_grace_period_seconds *int

    Volume *[]Kubernetes_deployment_spec_1083_template_1088_spec_1090_volume_1172

}

type Kubernetes_deployment_spec_1083_template_1088 struct {

    Metadata []Kubernetes_deployment_spec_1083_template_1088_metadata_1089

    Spec []Kubernetes_deployment_spec_1083_template_1088_spec_1090

}

type Kubernetes_deployment_spec_1083 struct {

    Min_ready_seconds *int

    Paused *bool

    Progress_deadline_seconds *int

    Replicas *int

    Revision_history_limit *int

    Selector *[]Kubernetes_deployment_spec_1083_selector_1084

    Strategy *[]Kubernetes_deployment_spec_1083_strategy_1086

    Template []Kubernetes_deployment_spec_1083_template_1088

}

type Kubernetes_deployment struct {

    Kubernetes_deployment_id *string `lyra:"ignore"`

    Metadata []Kubernetes_deployment_metadata_1082

    Spec []Kubernetes_deployment_spec_1083

}

// Kubernetes_deploymentHandler ...
type Kubernetes_deploymentHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_deploymentHandler) Create(desired *Kubernetes_deployment) (*Kubernetes_deployment, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_deployment", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_deploymentHandler) Read(externalID string) (*Kubernetes_deployment, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_deployment", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_deployment{ Kubernetes_deployment_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_deploymentHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_deployment", externalID)
}

type Kubernetes_horizontal_pod_autoscaler_metadata_1205 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_horizontal_pod_autoscaler_spec_1206_scale_target_ref_1207 struct {

    Api_version *string

    Kind string

    Name string

}

type Kubernetes_horizontal_pod_autoscaler_spec_1206 struct {

    Max_replicas int

    Min_replicas *int

    Scale_target_ref []Kubernetes_horizontal_pod_autoscaler_spec_1206_scale_target_ref_1207

    Target_cpu_utilization_percentage *int

}

type Kubernetes_horizontal_pod_autoscaler struct {

    Kubernetes_horizontal_pod_autoscaler_id *string `lyra:"ignore"`

    Metadata []Kubernetes_horizontal_pod_autoscaler_metadata_1205

    Spec []Kubernetes_horizontal_pod_autoscaler_spec_1206

}

// Kubernetes_horizontal_pod_autoscalerHandler ...
type Kubernetes_horizontal_pod_autoscalerHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_horizontal_pod_autoscalerHandler) Create(desired *Kubernetes_horizontal_pod_autoscaler) (*Kubernetes_horizontal_pod_autoscaler, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_horizontal_pod_autoscaler", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_horizontal_pod_autoscalerHandler) Read(externalID string) (*Kubernetes_horizontal_pod_autoscaler, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_horizontal_pod_autoscaler", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_horizontal_pod_autoscaler{ Kubernetes_horizontal_pod_autoscaler_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_horizontal_pod_autoscalerHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_horizontal_pod_autoscaler", externalID)
}

type Kubernetes_limit_range_metadata_1208 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_limit_range_spec_1209_limit_1210 struct {

    Default *map[string]string

    Default_request *map[string]string

    Max *map[string]string

    Max_limit_request_ratio *map[string]string

    Min *map[string]string

    Type *string

}

type Kubernetes_limit_range_spec_1209 struct {

    Limit *[]Kubernetes_limit_range_spec_1209_limit_1210

}

type Kubernetes_limit_range struct {

    Kubernetes_limit_range_id *string `lyra:"ignore"`

    Metadata []Kubernetes_limit_range_metadata_1208

    Spec *[]Kubernetes_limit_range_spec_1209

}

// Kubernetes_limit_rangeHandler ...
type Kubernetes_limit_rangeHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_limit_rangeHandler) Create(desired *Kubernetes_limit_range) (*Kubernetes_limit_range, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_limit_range", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_limit_rangeHandler) Read(externalID string) (*Kubernetes_limit_range, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_limit_range", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_limit_range{ Kubernetes_limit_range_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_limit_rangeHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_limit_range", externalID)
}

type Kubernetes_namespace_metadata_1211 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_namespace struct {

    Kubernetes_namespace_id *string `lyra:"ignore"`

    Metadata []Kubernetes_namespace_metadata_1211

}

// Kubernetes_namespaceHandler ...
type Kubernetes_namespaceHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_namespaceHandler) Create(desired *Kubernetes_namespace) (*Kubernetes_namespace, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_namespace", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_namespaceHandler) Read(externalID string) (*Kubernetes_namespace, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_namespace", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_namespace{ Kubernetes_namespace_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_namespaceHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_namespace", externalID)
}

type Kubernetes_network_policy_metadata_1212 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_network_policy_spec_1213_egress_1214_ports_1215 struct {

    Port *string

    Protocol *string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216_ip_block_1217 struct {

    Cidr *string

    Except *[]string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216_namespace_selector_1218_match_expressions_1219 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216_namespace_selector_1218 struct {

    Match_expressions *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216_namespace_selector_1218_match_expressions_1219

    Match_labels *map[string]string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216_pod_selector_1220_match_expressions_1221 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216_pod_selector_1220 struct {

    Match_expressions *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216_pod_selector_1220_match_expressions_1221

    Match_labels *map[string]string

}

type Kubernetes_network_policy_spec_1213_egress_1214_to_1216 struct {

    Ip_block *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216_ip_block_1217

    Namespace_selector *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216_namespace_selector_1218

    Pod_selector *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216_pod_selector_1220

}

type Kubernetes_network_policy_spec_1213_egress_1214 struct {

    Ports *[]Kubernetes_network_policy_spec_1213_egress_1214_ports_1215

    To *[]Kubernetes_network_policy_spec_1213_egress_1214_to_1216

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_ip_block_1224 struct {

    Cidr *string

    Except *[]string

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_namespace_selector_1225_match_expressions_1226 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_namespace_selector_1225 struct {

    Match_expressions *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_namespace_selector_1225_match_expressions_1226

    Match_labels *map[string]string

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_pod_selector_1227_match_expressions_1228 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_pod_selector_1227 struct {

    Match_expressions *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_pod_selector_1227_match_expressions_1228

    Match_labels *map[string]string

}

type Kubernetes_network_policy_spec_1213_ingress_1222_from_1223 struct {

    Ip_block *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_ip_block_1224

    Namespace_selector *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_namespace_selector_1225

    Pod_selector *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223_pod_selector_1227

}

type Kubernetes_network_policy_spec_1213_ingress_1222_ports_1229 struct {

    Port *string

    Protocol *string

}

type Kubernetes_network_policy_spec_1213_ingress_1222 struct {

    From *[]Kubernetes_network_policy_spec_1213_ingress_1222_from_1223

    Ports *[]Kubernetes_network_policy_spec_1213_ingress_1222_ports_1229

}

type Kubernetes_network_policy_spec_1213_pod_selector_1230_match_expressions_1231 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_network_policy_spec_1213_pod_selector_1230 struct {

    Match_expressions *[]Kubernetes_network_policy_spec_1213_pod_selector_1230_match_expressions_1231

    Match_labels *map[string]string

}

type Kubernetes_network_policy_spec_1213 struct {

    Egress *[]Kubernetes_network_policy_spec_1213_egress_1214

    Ingress *[]Kubernetes_network_policy_spec_1213_ingress_1222

    Pod_selector []Kubernetes_network_policy_spec_1213_pod_selector_1230

    Policy_types []string

}

type Kubernetes_network_policy struct {

    Kubernetes_network_policy_id *string `lyra:"ignore"`

    Metadata []Kubernetes_network_policy_metadata_1212

    Spec []Kubernetes_network_policy_spec_1213

}

// Kubernetes_network_policyHandler ...
type Kubernetes_network_policyHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_network_policyHandler) Create(desired *Kubernetes_network_policy) (*Kubernetes_network_policy, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_network_policy", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_network_policyHandler) Read(externalID string) (*Kubernetes_network_policy, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_network_policy", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_network_policy{ Kubernetes_network_policy_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_network_policyHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_network_policy", externalID)
}

type Kubernetes_persistent_volume_metadata_1232 struct {

    Annotations *map[string]string

    Generation *int

    Labels *map[string]string

    Name *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236_match_expressions_1237 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236_match_fields_1238 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236 struct {

    Match_expressions *[]Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236_match_expressions_1237

    Match_fields *[]Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236_match_fields_1238

}

type Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235 struct {

    Node_selector_term *[]Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235_node_selector_term_1236

}

type Kubernetes_persistent_volume_spec_1233_node_affinity_1234 struct {

    Required *[]Kubernetes_persistent_volume_spec_1233_node_affinity_1234_required_1235

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_aws_elastic_block_store_1240 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_azure_disk_1241 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_azure_file_1242 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_ceph_fs_1243_secret_ref_1244 struct {

    Name *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_ceph_fs_1243 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_ceph_fs_1243_secret_ref_1244

    User *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_cinder_1245 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_fc_1246 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flex_volume_1247_secret_ref_1248 struct {

    Name *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flex_volume_1247 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flex_volume_1247_secret_ref_1248

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flocker_1249 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_gce_persistent_disk_1250 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_glusterfs_1251 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_host_path_1252 struct {

    Path *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_iscsi_1253 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_local_1254 struct {

    Path *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_nfs_1255 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_photon_persistent_disk_1256 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_quobyte_1257 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_rbd_1258_secret_ref_1259 struct {

    Name *string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_rbd_1258 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_rbd_1258_secret_ref_1259

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_vsphere_volume_1260 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239 struct {

    Aws_elastic_block_store *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_aws_elastic_block_store_1240

    Azure_disk *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_azure_disk_1241

    Azure_file *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_azure_file_1242

    Ceph_fs *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_ceph_fs_1243

    Cinder *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_cinder_1245

    Fc *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_fc_1246

    Flex_volume *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flex_volume_1247

    Flocker *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_flocker_1249

    Gce_persistent_disk *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_gce_persistent_disk_1250

    Glusterfs *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_glusterfs_1251

    Host_path *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_host_path_1252

    Iscsi *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_iscsi_1253

    Local *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_local_1254

    Nfs *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_nfs_1255

    Photon_persistent_disk *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_photon_persistent_disk_1256

    Quobyte *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_quobyte_1257

    Rbd *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_rbd_1258

    Vsphere_volume *[]Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239_vsphere_volume_1260

}

type Kubernetes_persistent_volume_spec_1233 struct {

    Access_modes []string

    Capacity map[string]string

    Node_affinity *[]Kubernetes_persistent_volume_spec_1233_node_affinity_1234

    Persistent_volume_reclaim_policy *string

    Persistent_volume_source []Kubernetes_persistent_volume_spec_1233_persistent_volume_source_1239

    Storage_class_name *string

}

type Kubernetes_persistent_volume struct {

    Kubernetes_persistent_volume_id *string `lyra:"ignore"`

    Metadata []Kubernetes_persistent_volume_metadata_1232

    Spec []Kubernetes_persistent_volume_spec_1233

}

// Kubernetes_persistent_volumeHandler ...
type Kubernetes_persistent_volumeHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_persistent_volumeHandler) Create(desired *Kubernetes_persistent_volume) (*Kubernetes_persistent_volume, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_persistent_volume", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_persistent_volumeHandler) Read(externalID string) (*Kubernetes_persistent_volume, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_persistent_volume", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_persistent_volume{ Kubernetes_persistent_volume_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_persistent_volumeHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_persistent_volume", externalID)
}

type Kubernetes_persistent_volume_claim_metadata_1261 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_persistent_volume_claim_spec_1262_resources_1263 struct {

    Limits *map[string]string

    Requests *map[string]string

}

type Kubernetes_persistent_volume_claim_spec_1262_selector_1264_match_expressions_1265 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_persistent_volume_claim_spec_1262_selector_1264 struct {

    Match_expressions *[]Kubernetes_persistent_volume_claim_spec_1262_selector_1264_match_expressions_1265

    Match_labels *map[string]string

}

type Kubernetes_persistent_volume_claim_spec_1262 struct {

    Access_modes []string

    Resources []Kubernetes_persistent_volume_claim_spec_1262_resources_1263

    Selector *[]Kubernetes_persistent_volume_claim_spec_1262_selector_1264

    Storage_class_name *string

    Volume_name *string

}

type Kubernetes_persistent_volume_claim struct {

    Kubernetes_persistent_volume_claim_id *string `lyra:"ignore"`

    Metadata []Kubernetes_persistent_volume_claim_metadata_1261

    Spec []Kubernetes_persistent_volume_claim_spec_1262

    Wait_until_bound *bool

}

// Kubernetes_persistent_volume_claimHandler ...
type Kubernetes_persistent_volume_claimHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_persistent_volume_claimHandler) Create(desired *Kubernetes_persistent_volume_claim) (*Kubernetes_persistent_volume_claim, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_persistent_volume_claim", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_persistent_volume_claimHandler) Read(externalID string) (*Kubernetes_persistent_volume_claim, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_persistent_volume_claim", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_persistent_volume_claim{ Kubernetes_persistent_volume_claim_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_persistent_volume_claimHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_persistent_volume_claim", externalID)
}

type Kubernetes_pod_metadata_1266 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_config_map_key_ref_1271 struct {

    Key *string

    Name *string

}

type Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_field_ref_1272 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_resource_field_ref_1273 struct {

    Container_name *string

    Resource string

}

type Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_secret_key_ref_1274 struct {

    Key *string

    Name *string

}

type Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270 struct {

    Config_map_key_ref *[]Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_config_map_key_ref_1271

    Field_ref *[]Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_field_ref_1272

    Resource_field_ref *[]Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_resource_field_ref_1273

    Secret_key_ref *[]Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270_secret_key_ref_1274

}

type Kubernetes_pod_spec_1267_container_1268_env_1269 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_pod_spec_1267_container_1268_env_1269_value_from_1270

}

type Kubernetes_pod_spec_1267_container_1268_env_from_1275_config_map_ref_1276 struct {

    Name string

    Optional *bool

}

type Kubernetes_pod_spec_1267_container_1268_env_from_1275_secret_ref_1277 struct {

    Name string

    Optional *bool

}

type Kubernetes_pod_spec_1267_container_1268_env_from_1275 struct {

    Config_map_ref *[]Kubernetes_pod_spec_1267_container_1268_env_from_1275_config_map_ref_1276

    Prefix *string

    Secret_ref *[]Kubernetes_pod_spec_1267_container_1268_env_from_1275_secret_ref_1277

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_exec_1280 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_http_get_1281_http_header_1282 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_http_get_1281 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_http_get_1281_http_header_1282

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_tcp_socket_1283 struct {

    Port string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279 struct {

    Exec *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_exec_1280

    Http_get *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_http_get_1281

    Tcp_socket *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279_tcp_socket_1283

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_exec_1285 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_http_get_1286_http_header_1287 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_http_get_1286 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_http_get_1286_http_header_1287

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_tcp_socket_1288 struct {

    Port string

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284 struct {

    Exec *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_exec_1285

    Http_get *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_http_get_1286

    Tcp_socket *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284_tcp_socket_1288

}

type Kubernetes_pod_spec_1267_container_1268_lifecycle_1278 struct {

    Post_start *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_post_start_1279

    Pre_stop *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278_pre_stop_1284

}

type Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_exec_1290 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_http_get_1291_http_header_1292 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_http_get_1291 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_http_get_1291_http_header_1292

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_tcp_socket_1293 struct {

    Port string

}

type Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289 struct {

    Exec *[]Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_exec_1290

    Failure_threshold *int

    Http_get *[]Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_http_get_1291

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289_tcp_socket_1293

    Timeout_seconds *int

}

type Kubernetes_pod_spec_1267_container_1268_port_1294 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_exec_1296 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_http_get_1297_http_header_1298 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_http_get_1297 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_http_get_1297_http_header_1298

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_tcp_socket_1299 struct {

    Port string

}

type Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295 struct {

    Exec *[]Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_exec_1296

    Failure_threshold *int

    Http_get *[]Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_http_get_1297

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295_tcp_socket_1299

    Timeout_seconds *int

}

type Kubernetes_pod_spec_1267_container_1268_resources_1300_limits_1301 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_pod_spec_1267_container_1268_resources_1300_requests_1302 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_pod_spec_1267_container_1268_resources_1300 struct {

    Limits *[]Kubernetes_pod_spec_1267_container_1268_resources_1300_limits_1301

    Requests *[]Kubernetes_pod_spec_1267_container_1268_resources_1300_requests_1302

}

type Kubernetes_pod_spec_1267_container_1268_security_context_1303_capabilities_1304 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_pod_spec_1267_container_1268_security_context_1303_se_linux_options_1305 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_pod_spec_1267_container_1268_security_context_1303 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_pod_spec_1267_container_1268_security_context_1303_capabilities_1304

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_pod_spec_1267_container_1268_security_context_1303_se_linux_options_1305

}

type Kubernetes_pod_spec_1267_container_1268_volume_mount_1306 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_pod_spec_1267_container_1268 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_pod_spec_1267_container_1268_env_1269

    Env_from *[]Kubernetes_pod_spec_1267_container_1268_env_from_1275

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_pod_spec_1267_container_1268_lifecycle_1278

    Liveness_probe *[]Kubernetes_pod_spec_1267_container_1268_liveness_probe_1289

    Name string

    Port *[]Kubernetes_pod_spec_1267_container_1268_port_1294

    Readiness_probe *[]Kubernetes_pod_spec_1267_container_1268_readiness_probe_1295

    Resources *[]Kubernetes_pod_spec_1267_container_1268_resources_1300

    Security_context *[]Kubernetes_pod_spec_1267_container_1268_security_context_1303

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_pod_spec_1267_container_1268_volume_mount_1306

    Working_dir *string

}

type Kubernetes_pod_spec_1267_image_pull_secrets_1307 struct {

    Name string

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_config_map_key_ref_1311 struct {

    Key *string

    Name *string

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_field_ref_1312 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_resource_field_ref_1313 struct {

    Container_name *string

    Resource string

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_secret_key_ref_1314 struct {

    Key *string

    Name *string

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310 struct {

    Config_map_key_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_config_map_key_ref_1311

    Field_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_field_ref_1312

    Resource_field_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_resource_field_ref_1313

    Secret_key_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310_secret_key_ref_1314

}

type Kubernetes_pod_spec_1267_init_container_1308_env_1309 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309_value_from_1310

}

type Kubernetes_pod_spec_1267_init_container_1308_env_from_1315_config_map_ref_1316 struct {

    Name string

    Optional *bool

}

type Kubernetes_pod_spec_1267_init_container_1308_env_from_1315_secret_ref_1317 struct {

    Name string

    Optional *bool

}

type Kubernetes_pod_spec_1267_init_container_1308_env_from_1315 struct {

    Config_map_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_from_1315_config_map_ref_1316

    Prefix *string

    Secret_ref *[]Kubernetes_pod_spec_1267_init_container_1308_env_from_1315_secret_ref_1317

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_exec_1320 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_http_get_1321_http_header_1322 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_http_get_1321 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_http_get_1321_http_header_1322

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_tcp_socket_1323 struct {

    Port string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319 struct {

    Exec *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_exec_1320

    Http_get *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_http_get_1321

    Tcp_socket *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319_tcp_socket_1323

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_exec_1325 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_http_get_1326_http_header_1327 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_http_get_1326 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_http_get_1326_http_header_1327

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_tcp_socket_1328 struct {

    Port string

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324 struct {

    Exec *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_exec_1325

    Http_get *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_http_get_1326

    Tcp_socket *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324_tcp_socket_1328

}

type Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318 struct {

    Post_start *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_post_start_1319

    Pre_stop *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318_pre_stop_1324

}

type Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_exec_1330 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_http_get_1331_http_header_1332 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_http_get_1331 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_http_get_1331_http_header_1332

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_tcp_socket_1333 struct {

    Port string

}

type Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329 struct {

    Exec *[]Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_exec_1330

    Failure_threshold *int

    Http_get *[]Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_http_get_1331

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329_tcp_socket_1333

    Timeout_seconds *int

}

type Kubernetes_pod_spec_1267_init_container_1308_port_1334 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_exec_1336 struct {

    Command *[]string

}

type Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_http_get_1337_http_header_1338 struct {

    Name *string

    Value *string

}

type Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_http_get_1337 struct {

    Host *string

    Http_header *[]Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_http_get_1337_http_header_1338

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_tcp_socket_1339 struct {

    Port string

}

type Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335 struct {

    Exec *[]Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_exec_1336

    Failure_threshold *int

    Http_get *[]Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_http_get_1337

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335_tcp_socket_1339

    Timeout_seconds *int

}

type Kubernetes_pod_spec_1267_init_container_1308_resources_1340_limits_1341 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_pod_spec_1267_init_container_1308_resources_1340_requests_1342 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_pod_spec_1267_init_container_1308_resources_1340 struct {

    Limits *[]Kubernetes_pod_spec_1267_init_container_1308_resources_1340_limits_1341

    Requests *[]Kubernetes_pod_spec_1267_init_container_1308_resources_1340_requests_1342

}

type Kubernetes_pod_spec_1267_init_container_1308_security_context_1343_capabilities_1344 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_pod_spec_1267_init_container_1308_security_context_1343_se_linux_options_1345 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_pod_spec_1267_init_container_1308_security_context_1343 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_pod_spec_1267_init_container_1308_security_context_1343_capabilities_1344

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_pod_spec_1267_init_container_1308_security_context_1343_se_linux_options_1345

}

type Kubernetes_pod_spec_1267_init_container_1308_volume_mount_1346 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_pod_spec_1267_init_container_1308 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_pod_spec_1267_init_container_1308_env_1309

    Env_from *[]Kubernetes_pod_spec_1267_init_container_1308_env_from_1315

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_pod_spec_1267_init_container_1308_lifecycle_1318

    Liveness_probe *[]Kubernetes_pod_spec_1267_init_container_1308_liveness_probe_1329

    Name string

    Port *[]Kubernetes_pod_spec_1267_init_container_1308_port_1334

    Readiness_probe *[]Kubernetes_pod_spec_1267_init_container_1308_readiness_probe_1335

    Resources *[]Kubernetes_pod_spec_1267_init_container_1308_resources_1340

    Security_context *[]Kubernetes_pod_spec_1267_init_container_1308_security_context_1343

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_pod_spec_1267_init_container_1308_volume_mount_1346

    Working_dir *string

}

type Kubernetes_pod_spec_1267_security_context_1347_se_linux_options_1348 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_pod_spec_1267_security_context_1347 struct {

    Fs_group *int

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_pod_spec_1267_security_context_1347_se_linux_options_1348

    Supplemental_groups *[]int

}

type Kubernetes_pod_spec_1267_volume_1349_aws_elastic_block_store_1350 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_pod_spec_1267_volume_1349_azure_disk_1351 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_pod_spec_1267_volume_1349_azure_file_1352 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_pod_spec_1267_volume_1349_ceph_fs_1353_secret_ref_1354 struct {

    Name *string

}

type Kubernetes_pod_spec_1267_volume_1349_ceph_fs_1353 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_pod_spec_1267_volume_1349_ceph_fs_1353_secret_ref_1354

    User *string

}

type Kubernetes_pod_spec_1267_volume_1349_cinder_1355 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_pod_spec_1267_volume_1349_config_map_1356_items_1357 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_pod_spec_1267_volume_1349_config_map_1356 struct {

    Default_mode *int

    Items *[]Kubernetes_pod_spec_1267_volume_1349_config_map_1356_items_1357

    Name *string

}

type Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359_field_ref_1360 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359_resource_field_ref_1361 struct {

    Container_name string

    Quantity *string

    Resource string

}

type Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359 struct {

    Field_ref []Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359_field_ref_1360

    Mode *int

    Path string

    Resource_field_ref *[]Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359_resource_field_ref_1361

}

type Kubernetes_pod_spec_1267_volume_1349_downward_api_1358 struct {

    Default_mode *int

    Items *[]Kubernetes_pod_spec_1267_volume_1349_downward_api_1358_items_1359

}

type Kubernetes_pod_spec_1267_volume_1349_empty_dir_1362 struct {

    Medium *string

}

type Kubernetes_pod_spec_1267_volume_1349_fc_1363 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_pod_spec_1267_volume_1349_flex_volume_1364_secret_ref_1365 struct {

    Name *string

}

type Kubernetes_pod_spec_1267_volume_1349_flex_volume_1364 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_pod_spec_1267_volume_1349_flex_volume_1364_secret_ref_1365

}

type Kubernetes_pod_spec_1267_volume_1349_flocker_1366 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_pod_spec_1267_volume_1349_gce_persistent_disk_1367 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_pod_spec_1267_volume_1349_git_repo_1368 struct {

    Directory *string

    Repository *string

    Revision *string

}

type Kubernetes_pod_spec_1267_volume_1349_glusterfs_1369 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_pod_spec_1267_volume_1349_host_path_1370 struct {

    Path *string

}

type Kubernetes_pod_spec_1267_volume_1349_iscsi_1371 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_pod_spec_1267_volume_1349_local_1372 struct {

    Path *string

}

type Kubernetes_pod_spec_1267_volume_1349_nfs_1373 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_pod_spec_1267_volume_1349_persistent_volume_claim_1374 struct {

    Claim_name *string

    Read_only *bool

}

type Kubernetes_pod_spec_1267_volume_1349_photon_persistent_disk_1375 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_pod_spec_1267_volume_1349_quobyte_1376 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_pod_spec_1267_volume_1349_rbd_1377_secret_ref_1378 struct {

    Name *string

}

type Kubernetes_pod_spec_1267_volume_1349_rbd_1377 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_pod_spec_1267_volume_1349_rbd_1377_secret_ref_1378

}

type Kubernetes_pod_spec_1267_volume_1349_secret_1379_items_1380 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_pod_spec_1267_volume_1349_secret_1379 struct {

    Default_mode *int

    Items *[]Kubernetes_pod_spec_1267_volume_1349_secret_1379_items_1380

    Optional *bool

    Secret_name *string

}

type Kubernetes_pod_spec_1267_volume_1349_vsphere_volume_1381 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_pod_spec_1267_volume_1349 struct {

    Aws_elastic_block_store *[]Kubernetes_pod_spec_1267_volume_1349_aws_elastic_block_store_1350

    Azure_disk *[]Kubernetes_pod_spec_1267_volume_1349_azure_disk_1351

    Azure_file *[]Kubernetes_pod_spec_1267_volume_1349_azure_file_1352

    Ceph_fs *[]Kubernetes_pod_spec_1267_volume_1349_ceph_fs_1353

    Cinder *[]Kubernetes_pod_spec_1267_volume_1349_cinder_1355

    Config_map *[]Kubernetes_pod_spec_1267_volume_1349_config_map_1356

    Downward_api *[]Kubernetes_pod_spec_1267_volume_1349_downward_api_1358

    Empty_dir *[]Kubernetes_pod_spec_1267_volume_1349_empty_dir_1362

    Fc *[]Kubernetes_pod_spec_1267_volume_1349_fc_1363

    Flex_volume *[]Kubernetes_pod_spec_1267_volume_1349_flex_volume_1364

    Flocker *[]Kubernetes_pod_spec_1267_volume_1349_flocker_1366

    Gce_persistent_disk *[]Kubernetes_pod_spec_1267_volume_1349_gce_persistent_disk_1367

    Git_repo *[]Kubernetes_pod_spec_1267_volume_1349_git_repo_1368

    Glusterfs *[]Kubernetes_pod_spec_1267_volume_1349_glusterfs_1369

    Host_path *[]Kubernetes_pod_spec_1267_volume_1349_host_path_1370

    Iscsi *[]Kubernetes_pod_spec_1267_volume_1349_iscsi_1371

    Local *[]Kubernetes_pod_spec_1267_volume_1349_local_1372

    Name *string

    Nfs *[]Kubernetes_pod_spec_1267_volume_1349_nfs_1373

    Persistent_volume_claim *[]Kubernetes_pod_spec_1267_volume_1349_persistent_volume_claim_1374

    Photon_persistent_disk *[]Kubernetes_pod_spec_1267_volume_1349_photon_persistent_disk_1375

    Quobyte *[]Kubernetes_pod_spec_1267_volume_1349_quobyte_1376

    Rbd *[]Kubernetes_pod_spec_1267_volume_1349_rbd_1377

    Secret *[]Kubernetes_pod_spec_1267_volume_1349_secret_1379

    Vsphere_volume *[]Kubernetes_pod_spec_1267_volume_1349_vsphere_volume_1381

}

type Kubernetes_pod_spec_1267 struct {

    Active_deadline_seconds *int

    Container *[]Kubernetes_pod_spec_1267_container_1268

    Dns_policy *string

    Host_ipc *bool

    Host_network *bool

    Host_pid *bool

    Hostname *string

    Image_pull_secrets *[]Kubernetes_pod_spec_1267_image_pull_secrets_1307

    Init_container *[]Kubernetes_pod_spec_1267_init_container_1308

    Node_name *string

    Node_selector *map[string]string

    Restart_policy *string

    Security_context *[]Kubernetes_pod_spec_1267_security_context_1347

    Service_account_name *string

    Subdomain *string

    Termination_grace_period_seconds *int

    Volume *[]Kubernetes_pod_spec_1267_volume_1349

}

type Kubernetes_pod struct {

    Kubernetes_pod_id *string `lyra:"ignore"`

    Metadata []Kubernetes_pod_metadata_1266

    Spec []Kubernetes_pod_spec_1267

}

// Kubernetes_podHandler ...
type Kubernetes_podHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_podHandler) Create(desired *Kubernetes_pod) (*Kubernetes_pod, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_pod", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_podHandler) Read(externalID string) (*Kubernetes_pod, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_pod", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_pod{ Kubernetes_pod_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_podHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_pod", externalID)
}

type Kubernetes_replication_controller_metadata_1382 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_config_map_key_ref_1388 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_field_ref_1389 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_resource_field_ref_1390 struct {

    Container_name *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_secret_key_ref_1391 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387 struct {

    Config_map_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_config_map_key_ref_1388

    Field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_field_ref_1389

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_resource_field_ref_1390

    Secret_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387_secret_key_ref_1391

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386_value_from_1387

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392_config_map_ref_1393 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392_secret_ref_1394 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392 struct {

    Config_map_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392_config_map_ref_1393

    Prefix *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392_secret_ref_1394

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_exec_1397 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_http_get_1398_http_header_1399 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_http_get_1398 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_http_get_1398_http_header_1399

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_tcp_socket_1400 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_exec_1397

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_http_get_1398

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396_tcp_socket_1400

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_exec_1402 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_http_get_1403_http_header_1404 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_http_get_1403 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_http_get_1403_http_header_1404

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_tcp_socket_1405 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_exec_1402

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_http_get_1403

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401_tcp_socket_1405

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395 struct {

    Post_start *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_post_start_1396

    Pre_stop *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395_pre_stop_1401

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_exec_1407 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_http_get_1408_http_header_1409 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_http_get_1408 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_http_get_1408_http_header_1409

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_tcp_socket_1410 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_exec_1407

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_http_get_1408

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406_tcp_socket_1410

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_port_1411 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_exec_1413 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_http_get_1414_http_header_1415 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_http_get_1414 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_http_get_1414_http_header_1415

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_tcp_socket_1416 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_exec_1413

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_http_get_1414

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412_tcp_socket_1416

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417_limits_1418 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417_requests_1419 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417 struct {

    Limits *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417_limits_1418

    Requests *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417_requests_1419

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420_capabilities_1421 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420_se_linux_options_1422 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420_capabilities_1421

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420_se_linux_options_1422

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385_volume_mount_1423 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_container_1385 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_1386

    Env_from *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_env_from_1392

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_lifecycle_1395

    Liveness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_liveness_probe_1406

    Name string

    Port *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_port_1411

    Readiness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_readiness_probe_1412

    Resources *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_resources_1417

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_security_context_1420

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385_volume_mount_1423

    Working_dir *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_image_pull_secrets_1424 struct {

    Name string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_config_map_key_ref_1428 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_field_ref_1429 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_resource_field_ref_1430 struct {

    Container_name *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_secret_key_ref_1431 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427 struct {

    Config_map_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_config_map_key_ref_1428

    Field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_field_ref_1429

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_resource_field_ref_1430

    Secret_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427_secret_key_ref_1431

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426_value_from_1427

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432_config_map_ref_1433 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432_secret_ref_1434 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432 struct {

    Config_map_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432_config_map_ref_1433

    Prefix *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432_secret_ref_1434

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_exec_1437 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_http_get_1438_http_header_1439 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_http_get_1438 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_http_get_1438_http_header_1439

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_tcp_socket_1440 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_exec_1437

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_http_get_1438

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436_tcp_socket_1440

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_exec_1442 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_http_get_1443_http_header_1444 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_http_get_1443 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_http_get_1443_http_header_1444

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_tcp_socket_1445 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_exec_1442

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_http_get_1443

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441_tcp_socket_1445

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435 struct {

    Post_start *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_post_start_1436

    Pre_stop *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435_pre_stop_1441

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_exec_1447 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_http_get_1448_http_header_1449 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_http_get_1448 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_http_get_1448_http_header_1449

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_tcp_socket_1450 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_exec_1447

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_http_get_1448

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446_tcp_socket_1450

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_port_1451 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_exec_1453 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_http_get_1454_http_header_1455 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_http_get_1454 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_http_get_1454_http_header_1455

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_tcp_socket_1456 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_exec_1453

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_http_get_1454

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452_tcp_socket_1456

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457_limits_1458 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457_requests_1459 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457 struct {

    Limits *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457_limits_1458

    Requests *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457_requests_1459

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460_capabilities_1461 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460_se_linux_options_1462 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460_capabilities_1461

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460_se_linux_options_1462

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_volume_mount_1463 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_1426

    Env_from *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_env_from_1432

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_lifecycle_1435

    Liveness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_liveness_probe_1446

    Name string

    Port *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_port_1451

    Readiness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_readiness_probe_1452

    Resources *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_resources_1457

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_security_context_1460

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425_volume_mount_1463

    Working_dir *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_metadata_1464 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_security_context_1465_se_linux_options_1466 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_security_context_1465 struct {

    Fs_group *int

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_security_context_1465_se_linux_options_1466

    Supplemental_groups *[]int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_config_map_key_ref_1471 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_field_ref_1472 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_resource_field_ref_1473 struct {

    Container_name *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_secret_key_ref_1474 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470 struct {

    Config_map_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_config_map_key_ref_1471

    Field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_field_ref_1472

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_resource_field_ref_1473

    Secret_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470_secret_key_ref_1474

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469_value_from_1470

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475_config_map_ref_1476 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475_secret_ref_1477 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475 struct {

    Config_map_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475_config_map_ref_1476

    Prefix *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475_secret_ref_1477

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_exec_1480 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_http_get_1481_http_header_1482 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_http_get_1481 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_http_get_1481_http_header_1482

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_tcp_socket_1483 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_exec_1480

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_http_get_1481

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479_tcp_socket_1483

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_exec_1485 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_http_get_1486_http_header_1487 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_http_get_1486 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_http_get_1486_http_header_1487

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_tcp_socket_1488 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_exec_1485

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_http_get_1486

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484_tcp_socket_1488

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478 struct {

    Post_start *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_post_start_1479

    Pre_stop *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478_pre_stop_1484

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_exec_1490 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_http_get_1491_http_header_1492 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_http_get_1491 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_http_get_1491_http_header_1492

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_tcp_socket_1493 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_exec_1490

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_http_get_1491

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489_tcp_socket_1493

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_port_1494 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_exec_1496 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_http_get_1497_http_header_1498 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_http_get_1497 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_http_get_1497_http_header_1498

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_tcp_socket_1499 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_exec_1496

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_http_get_1497

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495_tcp_socket_1499

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500_limits_1501 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500_requests_1502 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500 struct {

    Limits *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500_limits_1501

    Requests *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500_requests_1502

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503_capabilities_1504 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503_se_linux_options_1505 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503_capabilities_1504

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503_se_linux_options_1505

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_volume_mount_1506 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_1469

    Env_from *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_env_from_1475

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_lifecycle_1478

    Liveness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_liveness_probe_1489

    Name string

    Port *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_port_1494

    Readiness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_readiness_probe_1495

    Resources *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_resources_1500

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_security_context_1503

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468_volume_mount_1506

    Working_dir *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_image_pull_secrets_1507 struct {

    Name string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_config_map_key_ref_1511 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_field_ref_1512 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_resource_field_ref_1513 struct {

    Container_name *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_secret_key_ref_1514 struct {

    Key *string

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510 struct {

    Config_map_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_config_map_key_ref_1511

    Field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_field_ref_1512

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_resource_field_ref_1513

    Secret_key_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510_secret_key_ref_1514

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509_value_from_1510

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515_config_map_ref_1516 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515_secret_ref_1517 struct {

    Name string

    Optional *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515 struct {

    Config_map_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515_config_map_ref_1516

    Prefix *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515_secret_ref_1517

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_exec_1520 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_http_get_1521_http_header_1522 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_http_get_1521 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_http_get_1521_http_header_1522

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_tcp_socket_1523 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_exec_1520

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_http_get_1521

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519_tcp_socket_1523

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_exec_1525 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_http_get_1526_http_header_1527 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_http_get_1526 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_http_get_1526_http_header_1527

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_tcp_socket_1528 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_exec_1525

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_http_get_1526

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524_tcp_socket_1528

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518 struct {

    Post_start *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_post_start_1519

    Pre_stop *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518_pre_stop_1524

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_exec_1530 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_http_get_1531_http_header_1532 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_http_get_1531 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_http_get_1531_http_header_1532

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_tcp_socket_1533 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_exec_1530

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_http_get_1531

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529_tcp_socket_1533

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_port_1534 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_exec_1536 struct {

    Command *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_http_get_1537_http_header_1538 struct {

    Name *string

    Value *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_http_get_1537 struct {

    Host *string

    Http_header *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_http_get_1537_http_header_1538

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_tcp_socket_1539 struct {

    Port string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535 struct {

    Exec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_exec_1536

    Failure_threshold *int

    Http_get *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_http_get_1537

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535_tcp_socket_1539

    Timeout_seconds *int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540_limits_1541 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540_requests_1542 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540 struct {

    Limits *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540_limits_1541

    Requests *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540_requests_1542

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543_capabilities_1544 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543_se_linux_options_1545 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543_capabilities_1544

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543_se_linux_options_1545

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_volume_mount_1546 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_1509

    Env_from *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_env_from_1515

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_lifecycle_1518

    Liveness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_liveness_probe_1529

    Name string

    Port *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_port_1534

    Readiness_probe *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_readiness_probe_1535

    Resources *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_resources_1540

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_security_context_1543

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508_volume_mount_1546

    Working_dir *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_security_context_1547_se_linux_options_1548 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_security_context_1547 struct {

    Fs_group *int

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_security_context_1547_se_linux_options_1548

    Supplemental_groups *[]int

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_aws_elastic_block_store_1550 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_azure_disk_1551 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_azure_file_1552 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_ceph_fs_1553_secret_ref_1554 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_ceph_fs_1553 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_ceph_fs_1553_secret_ref_1554

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_cinder_1555 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_config_map_1556_items_1557 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_config_map_1556 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_config_map_1556_items_1557

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559_field_ref_1560 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559_resource_field_ref_1561 struct {

    Container_name string

    Quantity *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559 struct {

    Field_ref []Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559_field_ref_1560

    Mode *int

    Path string

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559_resource_field_ref_1561

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558_items_1559

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_empty_dir_1562 struct {

    Medium *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_fc_1563 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flex_volume_1564_secret_ref_1565 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flex_volume_1564 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flex_volume_1564_secret_ref_1565

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flocker_1566 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_gce_persistent_disk_1567 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_git_repo_1568 struct {

    Directory *string

    Repository *string

    Revision *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_glusterfs_1569 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_host_path_1570 struct {

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_iscsi_1571 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_local_1572 struct {

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_nfs_1573 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_persistent_volume_claim_1574 struct {

    Claim_name *string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_photon_persistent_disk_1575 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_quobyte_1576 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_rbd_1577_secret_ref_1578 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_rbd_1577 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_rbd_1577_secret_ref_1578

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_secret_1579_items_1580 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_secret_1579 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_secret_1579_items_1580

    Optional *bool

    Secret_name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_vsphere_volume_1581 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549 struct {

    Aws_elastic_block_store *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_aws_elastic_block_store_1550

    Azure_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_azure_disk_1551

    Azure_file *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_azure_file_1552

    Ceph_fs *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_ceph_fs_1553

    Cinder *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_cinder_1555

    Config_map *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_config_map_1556

    Downward_api *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_downward_api_1558

    Empty_dir *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_empty_dir_1562

    Fc *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_fc_1563

    Flex_volume *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flex_volume_1564

    Flocker *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_flocker_1566

    Gce_persistent_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_gce_persistent_disk_1567

    Git_repo *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_git_repo_1568

    Glusterfs *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_glusterfs_1569

    Host_path *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_host_path_1570

    Iscsi *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_iscsi_1571

    Local *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_local_1572

    Name *string

    Nfs *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_nfs_1573

    Persistent_volume_claim *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_persistent_volume_claim_1574

    Photon_persistent_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_photon_persistent_disk_1575

    Quobyte *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_quobyte_1576

    Rbd *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_rbd_1577

    Secret *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_secret_1579

    Vsphere_volume *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549_vsphere_volume_1581

}

type Kubernetes_replication_controller_spec_1383_template_1384_spec_1467 struct {

    Active_deadline_seconds *int

    Container *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_container_1468

    Dns_policy *string

    Host_ipc *bool

    Host_network *bool

    Host_pid *bool

    Hostname *string

    Image_pull_secrets *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_image_pull_secrets_1507

    Init_container *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_init_container_1508

    Node_name *string

    Node_selector *map[string]string

    Restart_policy *string

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_security_context_1547

    Service_account_name *string

    Subdomain *string

    Termination_grace_period_seconds *int

    Volume *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467_volume_1549

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_aws_elastic_block_store_1583 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_azure_disk_1584 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_azure_file_1585 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_ceph_fs_1586_secret_ref_1587 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_ceph_fs_1586 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_ceph_fs_1586_secret_ref_1587

    User *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_cinder_1588 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_config_map_1589_items_1590 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_config_map_1589 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_config_map_1589_items_1590

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592_field_ref_1593 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592_resource_field_ref_1594 struct {

    Container_name string

    Quantity *string

    Resource string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592 struct {

    Field_ref []Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592_field_ref_1593

    Mode *int

    Path string

    Resource_field_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592_resource_field_ref_1594

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591_items_1592

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_empty_dir_1595 struct {

    Medium *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_fc_1596 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flex_volume_1597_secret_ref_1598 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flex_volume_1597 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flex_volume_1597_secret_ref_1598

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flocker_1599 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_gce_persistent_disk_1600 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_git_repo_1601 struct {

    Directory *string

    Repository *string

    Revision *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_glusterfs_1602 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_host_path_1603 struct {

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_iscsi_1604 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_local_1605 struct {

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_nfs_1606 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_persistent_volume_claim_1607 struct {

    Claim_name *string

    Read_only *bool

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_photon_persistent_disk_1608 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_quobyte_1609 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_rbd_1610_secret_ref_1611 struct {

    Name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_rbd_1610 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_rbd_1610_secret_ref_1611

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_secret_1612_items_1613 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_secret_1612 struct {

    Default_mode *int

    Items *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_secret_1612_items_1613

    Optional *bool

    Secret_name *string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_vsphere_volume_1614 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_replication_controller_spec_1383_template_1384_volume_1582 struct {

    Aws_elastic_block_store *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_aws_elastic_block_store_1583

    Azure_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_azure_disk_1584

    Azure_file *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_azure_file_1585

    Ceph_fs *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_ceph_fs_1586

    Cinder *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_cinder_1588

    Config_map *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_config_map_1589

    Downward_api *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_downward_api_1591

    Empty_dir *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_empty_dir_1595

    Fc *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_fc_1596

    Flex_volume *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flex_volume_1597

    Flocker *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_flocker_1599

    Gce_persistent_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_gce_persistent_disk_1600

    Git_repo *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_git_repo_1601

    Glusterfs *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_glusterfs_1602

    Host_path *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_host_path_1603

    Iscsi *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_iscsi_1604

    Local *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_local_1605

    Name *string

    Nfs *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_nfs_1606

    Persistent_volume_claim *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_persistent_volume_claim_1607

    Photon_persistent_disk *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_photon_persistent_disk_1608

    Quobyte *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_quobyte_1609

    Rbd *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_rbd_1610

    Secret *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_secret_1612

    Vsphere_volume *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582_vsphere_volume_1614

}

type Kubernetes_replication_controller_spec_1383_template_1384 struct {

    Active_deadline_seconds *int

    Container *[]Kubernetes_replication_controller_spec_1383_template_1384_container_1385

    Dns_policy *string

    Host_ipc *bool

    Host_network *bool

    Host_pid *bool

    Hostname *string

    Image_pull_secrets *[]Kubernetes_replication_controller_spec_1383_template_1384_image_pull_secrets_1424

    Init_container *[]Kubernetes_replication_controller_spec_1383_template_1384_init_container_1425

    Metadata *[]Kubernetes_replication_controller_spec_1383_template_1384_metadata_1464

    Node_name *string

    Node_selector *map[string]string

    Restart_policy *string

    Security_context *[]Kubernetes_replication_controller_spec_1383_template_1384_security_context_1465

    Service_account_name *string

    Spec *[]Kubernetes_replication_controller_spec_1383_template_1384_spec_1467

    Subdomain *string

    Termination_grace_period_seconds *int

    Volume *[]Kubernetes_replication_controller_spec_1383_template_1384_volume_1582

}

type Kubernetes_replication_controller_spec_1383 struct {

    Min_ready_seconds *int

    Replicas *int

    Selector map[string]string

    Template []Kubernetes_replication_controller_spec_1383_template_1384

}

type Kubernetes_replication_controller struct {

    Kubernetes_replication_controller_id *string `lyra:"ignore"`

    Metadata []Kubernetes_replication_controller_metadata_1382

    Spec []Kubernetes_replication_controller_spec_1383

}

// Kubernetes_replication_controllerHandler ...
type Kubernetes_replication_controllerHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_replication_controllerHandler) Create(desired *Kubernetes_replication_controller) (*Kubernetes_replication_controller, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_replication_controller", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_replication_controllerHandler) Read(externalID string) (*Kubernetes_replication_controller, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_replication_controller", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_replication_controller{ Kubernetes_replication_controller_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_replication_controllerHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_replication_controller", externalID)
}

type Kubernetes_resource_quota_metadata_1615 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_resource_quota_spec_1616 struct {

    Hard *map[string]string

    Scopes *[]string

}

type Kubernetes_resource_quota struct {

    Kubernetes_resource_quota_id *string `lyra:"ignore"`

    Metadata []Kubernetes_resource_quota_metadata_1615

    Spec *[]Kubernetes_resource_quota_spec_1616

}

// Kubernetes_resource_quotaHandler ...
type Kubernetes_resource_quotaHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_resource_quotaHandler) Create(desired *Kubernetes_resource_quota) (*Kubernetes_resource_quota, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_resource_quota", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_resource_quotaHandler) Read(externalID string) (*Kubernetes_resource_quota, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_resource_quota", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_resource_quota{ Kubernetes_resource_quota_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_resource_quotaHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_resource_quota", externalID)
}

type Kubernetes_role_metadata_1617 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_role_rule_1618 struct {

    Api_groups []string

    Resource_names *[]string

    Resources []string

    Verbs []string

}

type Kubernetes_role struct {

    Kubernetes_role_id *string `lyra:"ignore"`

    Metadata []Kubernetes_role_metadata_1617

    Rule []Kubernetes_role_rule_1618

}

// Kubernetes_roleHandler ...
type Kubernetes_roleHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_roleHandler) Create(desired *Kubernetes_role) (*Kubernetes_role, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_role", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_roleHandler) Read(externalID string) (*Kubernetes_role, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_role", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_role{ Kubernetes_role_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_roleHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_role", externalID)
}

type Kubernetes_role_binding_metadata_1619 struct {

    Annotations *map[string]string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_role_binding_subject_1620 struct {

    Api_group *string

    Kind string

    Name string

    Namespace *string

}

type Kubernetes_role_binding struct {

    Kubernetes_role_binding_id *string `lyra:"ignore"`

    Metadata []Kubernetes_role_binding_metadata_1619

    Role_ref map[string]string

    Subject []Kubernetes_role_binding_subject_1620

}

// Kubernetes_role_bindingHandler ...
type Kubernetes_role_bindingHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_role_bindingHandler) Create(desired *Kubernetes_role_binding) (*Kubernetes_role_binding, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_role_binding", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_role_bindingHandler) Read(externalID string) (*Kubernetes_role_binding, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_role_binding", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_role_binding{ Kubernetes_role_binding_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_role_bindingHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_role_binding", externalID)
}

type Kubernetes_secret_metadata_1621 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_secret struct {

    Kubernetes_secret_id *string `lyra:"ignore"`

    Data *map[string]string

    Metadata []Kubernetes_secret_metadata_1621

    Type *string

}

// Kubernetes_secretHandler ...
type Kubernetes_secretHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_secretHandler) Create(desired *Kubernetes_secret) (*Kubernetes_secret, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_secret", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_secretHandler) Read(externalID string) (*Kubernetes_secret, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_secret", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_secret{ Kubernetes_secret_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_secretHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_secret", externalID)
}

type Kubernetes_service_load_balancer_ingress_1622 struct {

    Hostname *string

    Ip *string

}

type Kubernetes_service_metadata_1623 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_service_spec_1624_port_1625 struct {

    Name *string

    Node_port *int

    Port int

    Protocol *string

    Target_port *string

}

type Kubernetes_service_spec_1624 struct {

    Cluster_ip *string

    External_ips *[]string

    External_name *string

    Load_balancer_ip *string

    Load_balancer_source_ranges *[]string

    Port *[]Kubernetes_service_spec_1624_port_1625

    Selector *map[string]string

    Session_affinity *string

    Type *string

}

type Kubernetes_service struct {

    Kubernetes_service_id *string `lyra:"ignore"`

    Load_balancer_ingress *[]Kubernetes_service_load_balancer_ingress_1622

    Metadata []Kubernetes_service_metadata_1623

    Spec []Kubernetes_service_spec_1624

}

// Kubernetes_serviceHandler ...
type Kubernetes_serviceHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_serviceHandler) Create(desired *Kubernetes_service) (*Kubernetes_service, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_service", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_serviceHandler) Read(externalID string) (*Kubernetes_service, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_service", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_service{ Kubernetes_service_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_serviceHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_service", externalID)
}

type Kubernetes_service_account_image_pull_secret_1626 struct {

    Name *string

}

type Kubernetes_service_account_metadata_1627 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_service_account_secret_1628 struct {

    Name *string

}

type Kubernetes_service_account struct {

    Kubernetes_service_account_id *string `lyra:"ignore"`

    Automount_service_account_token *bool

    Default_secret_name *string

    Image_pull_secret *[]Kubernetes_service_account_image_pull_secret_1626

    Metadata []Kubernetes_service_account_metadata_1627

    Secret *[]Kubernetes_service_account_secret_1628

}

// Kubernetes_service_accountHandler ...
type Kubernetes_service_accountHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_service_accountHandler) Create(desired *Kubernetes_service_account) (*Kubernetes_service_account, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_service_account", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_service_accountHandler) Read(externalID string) (*Kubernetes_service_account, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_service_account", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_service_account{ Kubernetes_service_account_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_service_accountHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_service_account", externalID)
}

type Kubernetes_stateful_set_metadata_1629 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_stateful_set_spec_1630_selector_1631_match_expressions_1632 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_stateful_set_spec_1630_selector_1631 struct {

    Match_expressions *[]Kubernetes_stateful_set_spec_1630_selector_1631_match_expressions_1632

    Match_labels *map[string]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_metadata_1634 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_config_map_key_ref_1639 struct {

    Key *string

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_field_ref_1640 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_resource_field_ref_1641 struct {

    Container_name *string

    Resource string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_secret_key_ref_1642 struct {

    Key *string

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638 struct {

    Config_map_key_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_config_map_key_ref_1639

    Field_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_field_ref_1640

    Resource_field_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_resource_field_ref_1641

    Secret_key_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638_secret_key_ref_1642

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637_value_from_1638

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643_config_map_ref_1644 struct {

    Name string

    Optional *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643_secret_ref_1645 struct {

    Name string

    Optional *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643 struct {

    Config_map_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643_config_map_ref_1644

    Prefix *string

    Secret_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643_secret_ref_1645

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_exec_1648 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_http_get_1649_http_header_1650 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_http_get_1649 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_http_get_1649_http_header_1650

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_tcp_socket_1651 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_exec_1648

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_http_get_1649

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647_tcp_socket_1651

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_exec_1653 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_http_get_1654_http_header_1655 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_http_get_1654 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_http_get_1654_http_header_1655

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_tcp_socket_1656 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_exec_1653

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_http_get_1654

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652_tcp_socket_1656

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646 struct {

    Post_start *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_post_start_1647

    Pre_stop *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646_pre_stop_1652

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_exec_1658 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_http_get_1659_http_header_1660 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_http_get_1659 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_http_get_1659_http_header_1660

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_tcp_socket_1661 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_exec_1658

    Failure_threshold *int

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_http_get_1659

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657_tcp_socket_1661

    Timeout_seconds *int

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_port_1662 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_exec_1664 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_http_get_1665_http_header_1666 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_http_get_1665 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_http_get_1665_http_header_1666

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_tcp_socket_1667 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_exec_1664

    Failure_threshold *int

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_http_get_1665

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663_tcp_socket_1667

    Timeout_seconds *int

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668_limits_1669 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668_requests_1670 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668 struct {

    Limits *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668_limits_1669

    Requests *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668_requests_1670

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671_capabilities_1672 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671_se_linux_options_1673 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671_capabilities_1672

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671_se_linux_options_1673

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_volume_mount_1674 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_1637

    Env_from *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_env_from_1643

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_lifecycle_1646

    Liveness_probe *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_liveness_probe_1657

    Name string

    Port *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_port_1662

    Readiness_probe *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_readiness_probe_1663

    Resources *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_resources_1668

    Security_context *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_security_context_1671

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636_volume_mount_1674

    Working_dir *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_image_pull_secrets_1675 struct {

    Name string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_config_map_key_ref_1679 struct {

    Key *string

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_field_ref_1680 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_resource_field_ref_1681 struct {

    Container_name *string

    Resource string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_secret_key_ref_1682 struct {

    Key *string

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678 struct {

    Config_map_key_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_config_map_key_ref_1679

    Field_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_field_ref_1680

    Resource_field_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_resource_field_ref_1681

    Secret_key_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678_secret_key_ref_1682

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677 struct {

    Name string

    Value *string

    Value_from *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677_value_from_1678

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683_config_map_ref_1684 struct {

    Name string

    Optional *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683_secret_ref_1685 struct {

    Name string

    Optional *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683 struct {

    Config_map_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683_config_map_ref_1684

    Prefix *string

    Secret_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683_secret_ref_1685

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_exec_1688 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_http_get_1689_http_header_1690 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_http_get_1689 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_http_get_1689_http_header_1690

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_tcp_socket_1691 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_exec_1688

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_http_get_1689

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687_tcp_socket_1691

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_exec_1693 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_http_get_1694_http_header_1695 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_http_get_1694 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_http_get_1694_http_header_1695

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_tcp_socket_1696 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_exec_1693

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_http_get_1694

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692_tcp_socket_1696

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686 struct {

    Post_start *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_post_start_1687

    Pre_stop *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686_pre_stop_1692

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_exec_1698 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_http_get_1699_http_header_1700 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_http_get_1699 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_http_get_1699_http_header_1700

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_tcp_socket_1701 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_exec_1698

    Failure_threshold *int

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_http_get_1699

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697_tcp_socket_1701

    Timeout_seconds *int

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_port_1702 struct {

    Container_port int

    Host_ip *string

    Host_port *int

    Name *string

    Protocol *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_exec_1704 struct {

    Command *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_http_get_1705_http_header_1706 struct {

    Name *string

    Value *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_http_get_1705 struct {

    Host *string

    Http_header *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_http_get_1705_http_header_1706

    Path *string

    Port *string

    Scheme *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_tcp_socket_1707 struct {

    Port string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703 struct {

    Exec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_exec_1704

    Failure_threshold *int

    Http_get *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_http_get_1705

    Initial_delay_seconds *int

    Period_seconds *int

    Success_threshold *int

    Tcp_socket *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703_tcp_socket_1707

    Timeout_seconds *int

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708_limits_1709 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708_requests_1710 struct {

    Cpu *string

    Memory *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708 struct {

    Limits *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708_limits_1709

    Requests *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708_requests_1710

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711_capabilities_1712 struct {

    Add *[]string

    Drop *[]string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711_se_linux_options_1713 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711 struct {

    Allow_privilege_escalation *bool

    Capabilities *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711_capabilities_1712

    Privileged *bool

    Read_only_root_filesystem *bool

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711_se_linux_options_1713

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_volume_mount_1714 struct {

    Mount_path string

    Name string

    Read_only *bool

    Sub_path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676 struct {

    Args *[]string

    Command *[]string

    Env *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_1677

    Env_from *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_env_from_1683

    Image *string

    Image_pull_policy *string

    Lifecycle *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_lifecycle_1686

    Liveness_probe *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_liveness_probe_1697

    Name string

    Port *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_port_1702

    Readiness_probe *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_readiness_probe_1703

    Resources *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_resources_1708

    Security_context *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_security_context_1711

    Stdin *bool

    Stdin_once *bool

    Termination_message_path *string

    Tty *bool

    Volume_mount *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676_volume_mount_1714

    Working_dir *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_security_context_1715_se_linux_options_1716 struct {

    Level *string

    Role *string

    Type *string

    User *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_security_context_1715 struct {

    Fs_group *int

    Run_as_non_root *bool

    Run_as_user *int

    Se_linux_options *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_security_context_1715_se_linux_options_1716

    Supplemental_groups *[]int

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_aws_elastic_block_store_1718 struct {

    Fs_type *string

    Partition *int

    Read_only *bool

    Volume_id string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_azure_disk_1719 struct {

    Caching_mode string

    Data_disk_uri string

    Disk_name string

    Fs_type *string

    Read_only *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_azure_file_1720 struct {

    Read_only *bool

    Secret_name string

    Share_name string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_ceph_fs_1721_secret_ref_1722 struct {

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_ceph_fs_1721 struct {

    Monitors []string

    Path *string

    Read_only *bool

    Secret_file *string

    Secret_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_ceph_fs_1721_secret_ref_1722

    User *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_cinder_1723 struct {

    Fs_type *string

    Read_only *bool

    Volume_id string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_config_map_1724_items_1725 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_config_map_1724 struct {

    Default_mode *int

    Items *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_config_map_1724_items_1725

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727_field_ref_1728 struct {

    Api_version *string

    Field_path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727_resource_field_ref_1729 struct {

    Container_name string

    Quantity *string

    Resource string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727 struct {

    Field_ref []Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727_field_ref_1728

    Mode *int

    Path string

    Resource_field_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727_resource_field_ref_1729

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726 struct {

    Default_mode *int

    Items *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726_items_1727

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_empty_dir_1730 struct {

    Medium *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_fc_1731 struct {

    Fs_type *string

    Lun int

    Read_only *bool

    Target_ww_ns []string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flex_volume_1732_secret_ref_1733 struct {

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flex_volume_1732 struct {

    Driver string

    Fs_type *string

    Options *map[string]string

    Read_only *bool

    Secret_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flex_volume_1732_secret_ref_1733

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flocker_1734 struct {

    Dataset_name *string

    Dataset_uuid *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_gce_persistent_disk_1735 struct {

    Fs_type *string

    Partition *int

    Pd_name string

    Read_only *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_git_repo_1736 struct {

    Directory *string

    Repository *string

    Revision *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_glusterfs_1737 struct {

    Endpoints_name string

    Path string

    Read_only *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_host_path_1738 struct {

    Path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_iscsi_1739 struct {

    Fs_type *string

    Iqn string

    Iscsi_interface *string

    Lun *int

    Read_only *bool

    Target_portal string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_local_1740 struct {

    Path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_nfs_1741 struct {

    Path string

    Read_only *bool

    Server string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_persistent_volume_claim_1742 struct {

    Claim_name *string

    Read_only *bool

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_photon_persistent_disk_1743 struct {

    Fs_type *string

    Pd_id string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_quobyte_1744 struct {

    Group *string

    Read_only *bool

    Registry string

    User *string

    Volume string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_rbd_1745_secret_ref_1746 struct {

    Name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_rbd_1745 struct {

    Ceph_monitors []string

    Fs_type *string

    Keyring *string

    Rados_user *string

    Rbd_image string

    Rbd_pool *string

    Read_only *bool

    Secret_ref *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_rbd_1745_secret_ref_1746

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_secret_1747_items_1748 struct {

    Key *string

    Mode *int

    Path *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_secret_1747 struct {

    Default_mode *int

    Items *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_secret_1747_items_1748

    Optional *bool

    Secret_name *string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_vsphere_volume_1749 struct {

    Fs_type *string

    Volume_path string

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717 struct {

    Aws_elastic_block_store *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_aws_elastic_block_store_1718

    Azure_disk *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_azure_disk_1719

    Azure_file *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_azure_file_1720

    Ceph_fs *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_ceph_fs_1721

    Cinder *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_cinder_1723

    Config_map *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_config_map_1724

    Downward_api *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_downward_api_1726

    Empty_dir *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_empty_dir_1730

    Fc *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_fc_1731

    Flex_volume *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flex_volume_1732

    Flocker *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_flocker_1734

    Gce_persistent_disk *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_gce_persistent_disk_1735

    Git_repo *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_git_repo_1736

    Glusterfs *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_glusterfs_1737

    Host_path *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_host_path_1738

    Iscsi *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_iscsi_1739

    Local *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_local_1740

    Name *string

    Nfs *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_nfs_1741

    Persistent_volume_claim *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_persistent_volume_claim_1742

    Photon_persistent_disk *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_photon_persistent_disk_1743

    Quobyte *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_quobyte_1744

    Rbd *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_rbd_1745

    Secret *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_secret_1747

    Vsphere_volume *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717_vsphere_volume_1749

}

type Kubernetes_stateful_set_spec_1630_template_1633_spec_1635 struct {

    Active_deadline_seconds *int

    Container *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_container_1636

    Dns_policy *string

    Host_ipc *bool

    Host_network *bool

    Host_pid *bool

    Hostname *string

    Image_pull_secrets *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_image_pull_secrets_1675

    Init_container *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_init_container_1676

    Node_name *string

    Node_selector *map[string]string

    Restart_policy *string

    Security_context *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_security_context_1715

    Service_account_name *string

    Subdomain *string

    Termination_grace_period_seconds *int

    Volume *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635_volume_1717

}

type Kubernetes_stateful_set_spec_1630_template_1633 struct {

    Metadata []Kubernetes_stateful_set_spec_1630_template_1633_metadata_1634

    Spec *[]Kubernetes_stateful_set_spec_1630_template_1633_spec_1635

}

type Kubernetes_stateful_set_spec_1630_update_strategy_1750_rolling_update_1751 struct {

    Partition *int

}

type Kubernetes_stateful_set_spec_1630_update_strategy_1750 struct {

    Rolling_update *[]Kubernetes_stateful_set_spec_1630_update_strategy_1750_rolling_update_1751

    Type *string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_metadata_1753 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Namespace *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_resources_1755 struct {

    Limits *map[string]string

    Requests *map[string]string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_selector_1756_match_expressions_1757 struct {

    Key *string

    Operator *string

    Values *[]string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_selector_1756 struct {

    Match_expressions *[]Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_selector_1756_match_expressions_1757

    Match_labels *map[string]string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754 struct {

    Access_modes []string

    Resources []Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_resources_1755

    Selector *[]Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754_selector_1756

    Storage_class_name *string

    Volume_name *string

}

type Kubernetes_stateful_set_spec_1630_volume_claim_template_1752 struct {

    Metadata []Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_metadata_1753

    Spec []Kubernetes_stateful_set_spec_1630_volume_claim_template_1752_spec_1754

}

type Kubernetes_stateful_set_spec_1630 struct {

    Pod_management_policy *string

    Replicas *int

    Revision_history_limit *int

    Selector []Kubernetes_stateful_set_spec_1630_selector_1631

    Service_name string

    Template []Kubernetes_stateful_set_spec_1630_template_1633

    Update_strategy *[]Kubernetes_stateful_set_spec_1630_update_strategy_1750

    Volume_claim_template *[]Kubernetes_stateful_set_spec_1630_volume_claim_template_1752

}

type Kubernetes_stateful_set struct {

    Kubernetes_stateful_set_id *string `lyra:"ignore"`

    Metadata []Kubernetes_stateful_set_metadata_1629

    Spec []Kubernetes_stateful_set_spec_1630

}

// Kubernetes_stateful_setHandler ...
type Kubernetes_stateful_setHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_stateful_setHandler) Create(desired *Kubernetes_stateful_set) (*Kubernetes_stateful_set, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_stateful_set", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_stateful_setHandler) Read(externalID string) (*Kubernetes_stateful_set, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_stateful_set", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_stateful_set{ Kubernetes_stateful_set_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_stateful_setHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_stateful_set", externalID)
}

type Kubernetes_storage_class_metadata_1758 struct {

    Annotations *map[string]string

    Generate_name *string

    Generation *int

    Labels *map[string]string

    Name *string

    Resource_version *string

    Self_link *string

    Uid *string

}

type Kubernetes_storage_class struct {

    Kubernetes_storage_class_id *string `lyra:"ignore"`

    Metadata []Kubernetes_storage_class_metadata_1758

    Parameters *map[string]string

    Reclaim_policy *string

    Storage_provisioner string

    Volume_binding_mode *string

}

// Kubernetes_storage_classHandler ...
type Kubernetes_storage_classHandler struct {
	provider *schema.Provider
}

// Create ...
func (h *Kubernetes_storage_classHandler) Create(desired *Kubernetes_storage_class) (*Kubernetes_storage_class, string, error) {
	configureProvider(h.provider)
	rc := &terraform.ResourceConfig{
		Config: bridge.TerraformMarshal(desired),
	}
	id, err := bridge.Create(h.provider, "kubernetes_storage_class", rc)
	if err != nil {
		return nil, "", err
	}
	actual, err := h.Read(id)
	if err != nil {
		return nil, "", err
	}
	return actual, id, nil
}

// Read ...
func (h *Kubernetes_storage_classHandler) Read(externalID string) (*Kubernetes_storage_class, error) {
	configureProvider(h.provider)
	id, actual, err := bridge.Read(h.provider, "kubernetes_storage_class", externalID)
	if err != nil {
		return nil, err
	}
	x := &Kubernetes_storage_class{ Kubernetes_storage_class_id: &id }
	bridge.TerraformUnmarshal(actual, x)
	return x, nil
}

// Delete ...
func (h *Kubernetes_storage_classHandler) Delete(externalID string) error {
	configureProvider(h.provider)
	return bridge.Delete(h.provider, "kubernetes_storage_class", externalID)
}
